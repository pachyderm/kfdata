# Get me a Kube cluster with Kubeflow and Pachyderm on it.

name: KFData
base:
  os_image: quay.io/testfaster/kube-ubuntu
  kernel_image: quay.io/testfaster/ignite-kernel

  preload_files:
  - { download: https://github.com/kubeflow/manifests/blob/master/kfdef/kfctl_k8s_istio.v1.1.0.yaml,
      to: ./yaml/ }

  # Or, to upload from local ctx where testctl is run from (e.g. in git repo):
  # - { copy: ./kfctl_k8s_istio.v1.1.0.yaml, to: ./yaml/ }

  preload_docker_images:
    # Kubeflow
  - argoproj/argoui:v2.3.0
  - argoproj/workflow-controller:v2.3.0
  - bitnami/etcd:3.4.9-debian-10-r32
  - gcr.io/google_containers/spartakus-amd64:v1.1.0
  - gcr.io/k8s-minikube/storage-provisioner:v1.8.1
  - gcr.io/kfserving/kfserving-controller:0.2.2
  - gcr.io/knative-releases/knative.dev/serving/cmd/activator
  - gcr.io/knative-releases/knative.dev/serving/cmd/autoscaler
  - gcr.io/knative-releases/knative.dev/serving/cmd/autoscaler-hpa
  - gcr.io/knative-releases/knative.dev/serving/cmd/controller
  - gcr.io/knative-releases/knative.dev/serving/cmd/networking/istio
  - gcr.io/knative-releases/knative.dev/serving/cmd/webhook
  - gcr.io/kubebuilder/kube-rbac-proxy:v0.4.0
  - gcr.io/kubeflow-images-public/admission-webhook:v1.0.0-gaf96e4e3
  - gcr.io/kubeflow-images-public/centraldashboard:v1.0.0-g3ec0de71
  - gcr.io/kubeflow-images-public/ingress-setup:latest
  - gcr.io/kubeflow-images-public/jupyter-web-app:v1.0.0-g2bd63238
  - gcr.io/kubeflow-images-public/katib/v1alpha3/katib-controller:v0.8.0
  - gcr.io/kubeflow-images-public/katib/v1alpha3/katib-db-manager:v0.8.0
  - gcr.io/kubeflow-images-public/katib/v1alpha3/katib-ui:v0.8.0
  - gcr.io/kubeflow-images-public/kfam:v1.0.0-gf3e09203
  - gcr.io/kubeflow-images-public/kubernetes-sigs/application:1.0-beta
  - gcr.io/kubeflow-images-public/metadata-frontend:v0.1.8
  - gcr.io/kubeflow-images-public/metadata:v0.1.11
  - gcr.io/kubeflow-images-public/notebook-controller:v1.0.0-gcd65ce25
  - gcr.io/kubeflow-images-public/profile-controller:v1.0.0-ge50a8531
  - gcr.io/kubeflow-images-public/pytorch-operator:v1.0.0-g047cf0f
  - gcr.io/kubeflow-images-public/tensorflow-2.1.0-notebook-cpu:1.0.0
  - gcr.io/kubeflow-images-public/tf_operator:v1.0.0-g92389064
  - gcr.io/ml-pipeline/api-server:0.2.5
  - gcr.io/ml-pipeline/envoy:metadata-grpc
  - gcr.io/ml-pipeline/frontend:0.2.5
  - gcr.io/ml-pipeline/persistenceagent:0.2.5
  - gcr.io/ml-pipeline/scheduledworkflow:0.2.5
  - gcr.io/ml-pipeline/viewer-crd-controller:0.2.5
  - gcr.io/ml-pipeline/visualization-server:0.2.5
  - gcr.io/spark-operator/spark-operator:v1beta2-1.0.0-2.4.4
  - gcr.io/tfx-oss-public/ml_metadata_store_server:v0.21.1
  - grafana/grafana:6.0.2
  - istio/citadel:1.1.6
  - istio/galley:1.1.6
  - istio/kubectl:1.1.6
  - istio/mixer:1.1.6
  - istio/pilot:1.1.6
  - istio/proxy_init:1.1.6
  - istio/proxyv2:1.1.6
  - istio/sidecar_injector:1.1.6
  - jaegertracing/all-in-one:1.9
  - k8s.gcr.io/coredns:1.6.7
  - k8s.gcr.io/etcd:3.4.3-0
  - k8s.gcr.io/kube-apiserver:v1.18.3
  - k8s.gcr.io/kube-controller-manager:v1.18.3
  - k8s.gcr.io/kube-proxy:v1.18.3
  - k8s.gcr.io/kube-scheduler:v1.18.3
  - k8s.gcr.io/pause:3.2
  - kiali/kiali:v0.16
  - metacontroller/metacontroller:v0.3.0
  - minio/minio:RELEASE.2018-02-09T22-40-05Z
  - mysql:5.6
  - mysql:8
  - mysql:8.0.3
  - prom/prometheus:v2.3.1
  - quay.io/jetstack/cert-manager-cainjector:v0.11.0
  - quay.io/jetstack/cert-manager-controller:v0.11.0
  - quay.io/jetstack/cert-manager-webhook:v0.11.0
  - seldonio/seldon-core-operator:1.0.1
  - tensorflow/tensorflow:1.8.0

  prewarm_script: |-
    #!/bin/bash
    export KF_NAME=kf

    # Set the path to the base directory where you want to store one or more
    # Kubeflow deployments. For example, /opt/.
    # Then set the Kubeflow application directory for this deployment.
    export BASE_DIR=$(pwd)
    export KF_DIR=${BASE_DIR}/${KF_NAME}

    # Set the configuration file to use, such as the file specified below:
    export CONFIG_URI="${BASE_DIR}/yaml/kfctl_k8s_istio.v1.0.2.yaml"
    # Generate and deploy Kubeflow:
    mkdir -p ${KF_DIR}
    cd ${KF_DIR}
    kfctl apply -V -f ${CONFIG_URI}
    cd ${BASE_DIR}

  kubernetes_version: '1.18'

runtime:
  cpus: 2
  memory: 4GB
  disk: 30GB

prewarm_pool_size: 3
